#include <vector>
#include <iostream>
#include <queue>
using namespace std;

int xsur;
int ysur;
int r,s;
int kx,ky;
int found =0;
queue <int> qx;
queue <int> qy;

vector <vector<int>> vzdialenost;
vector <vector<char>> bludisko;


int kontroluj_suseda(int yy,int xx){
    if (vzdialenost[yy][xx] == -1){
        vzdialenost[yy][xx] = vzdialenost[ysur][xsur] + 1;
        qx.push(xx);
        qy.push(yy);

    }

}

int kontroluj_bod(int xxsur, int yysur){


    if ((kx == xxsur) && (ky == yysur)){
        cout << vzdialenost[yysur][xxsur] <<endl;
        found = 1;

    }
    if (ysur == 0){
        if (xsur == 0){
            kontroluj_suseda(ysur+1,xsur);
            kontroluj_suseda(ysur,xsur+1);
        }
        else if (xsur == s-1){
            kontroluj_suseda(ysur,xsur-1);
            kontroluj_suseda(ysur+1,xsur);
        }else{
            kontroluj_suseda(ysur,xsur+1);
            kontroluj_suseda(ysur,xsur-1);
            kontroluj_suseda(ysur+1,xsur);
        }
    }
    else if (ysur == r-1){
        if (xsur == 0){
            kontroluj_suseda(ysur-1,xsur);
            kontroluj_suseda(ysur,xsur+1);
        }
        else if (xsur == s-1){
            kontroluj_suseda(ysur,xsur-1);
            kontroluj_suseda(ysur-1,xsur);
        }else{
            kontroluj_suseda(ysur,xsur-1);
            kontroluj_suseda(ysur,xsur+1);
            kontroluj_suseda(ysur-1,xsur);
        }


    }

    else if (0 < ysur < r-1){
        if (xsur == 0){
            kontroluj_suseda(ysur-1,xsur);
            kontroluj_suseda(ysur+1,xsur);
            kontroluj_suseda(ysur,xsur+1);
        }
        else if (xsur == s-1){
            kontroluj_suseda(ysur-1,xsur);
            kontroluj_suseda(ysur+1,xsur);
            kontroluj_suseda(ysur,xsur-1);
        }else{
            kontroluj_suseda(ysur-1,xsur);
            kontroluj_suseda(ysur+1,xsur);
            kontroluj_suseda(ysur,xsur+1);
            kontroluj_suseda(ysur,xsur-1);
        }



    }


}



int main(){


    cin >> r >> s;


    bludisko.resize(r, vector<char>(s,-1));

    for(int y = 0; y < r; y++){
        for(int t = 0;t < s;t++){
            cin >> bludisko[y][t];
        }
    }


    vzdialenost.resize(r, vector<int>(s,-1));



    int vx,vy;


    for (int t = 0; t < s;t++){
        for (int d = 0;d < r;d++){
            if (bludisko[d][t] == ('.')){
                vzdialenost[d][t] = -1;
            }else if (bludisko[d][t] == ('#')){
                vzdialenost[d][t] = -2;
            }else if (bludisko[d][t] == 'S'){
                vzdialenost[d][t] = 0;
                vx = t;
                vy = d;
            }else {
                vzdialenost[d][t] = -1;
                ky = d;
                kx = t;
            }
        }
    }




    qx.push(vx);
    qy.push(vy);



    while (!qx.empty()){
        xsur = qx.front();
        ysur = qy.front();

        ////

        ////
        qy.pop();
        qx.pop();

        kontroluj_bod(xsur,ysur);




    }
    if (found == 0){
        cout << -1 << endl;
    }


};